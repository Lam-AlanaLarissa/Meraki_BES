// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.DatabaseConnection;
using Repositories.Models;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(MerakiDbContext))]
    [Migration("20250310073433_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("AC00000001")
                        .HasColumnName("AccountID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__349DA586A61F0662");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.CardProvider", b =>
                {
                    b.Property<string>("CardProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CpfullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CPFullName");

                    b.HasKey("CardProviderName")
                        .HasName("PK__CardProv__3B8DEBCC9CD99C33");

                    b.ToTable("CardProvider", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("C000000001")
                        .HasColumnName("CustomerID");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AccountID");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CardName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("CardNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("CardProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("TaxNumber")
                        .HasColumnType("bigint");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8B16F035F");

                    b.HasIndex("AccountId");

                    b.HasIndex("CardProviderName");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.CustomerWallet", b =>
                {
                    b.Property<string>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("CW00000001")
                        .HasColumnName("WalletID");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AccountID");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("WalletId")
                        .HasName("PK__Customer__84D4F92E55E9A551");

                    b.HasIndex("AccountId");

                    b.ToTable("CustomerWallet", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("P000000001")
                        .HasColumnName("ProductID");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AccountID");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DamageDetail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PcateId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PCateID");

                    b.Property<decimal?>("PercentageOfDamage")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("ProductDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<string>("PurchaseType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__B40CC6EDEFCE57C4");

                    b.HasIndex("AccountId");

                    b.HasIndex("PcateId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.ProductCategory", b =>
                {
                    b.Property<string>("PcateId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("PC00000001")
                        .HasColumnName("PCateID");

                    b.Property<string>("PcateDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PCateDesc");

                    b.Property<string>("PcateName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PCateName");

                    b.Property<string>("PcateStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PCateStatus");

                    b.HasKey("PcateId")
                        .HasName("PK__ProductC__5DF9FF092873E01E");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.Wishlist", b =>
                {
                    b.Property<string>("WishId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("W000000001")
                        .HasColumnName("WishID");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ProductID");

                    b.HasKey("WishId")
                        .HasName("PK__Wishlist__64BA6541F2011F05");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("Repositories.Models.Customer", b =>
                {
                    b.HasOne("Repositories.Models.Account", "Account")
                        .WithMany("Customers")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("customer_accountid_foreign");

                    b.HasOne("Repositories.Models.CardProvider", "CardProviderNameNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("CardProviderName")
                        .HasConstraintName("customer_cardprovider_foreign");

                    b.Navigation("Account");

                    b.Navigation("CardProviderNameNavigation");
                });

            modelBuilder.Entity("Repositories.Models.CustomerWallet", b =>
                {
                    b.HasOne("Repositories.Models.Account", "Account")
                        .WithMany("CustomerWallets")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("customerwallet_accountid_foreign");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Repositories.Models.Product", b =>
                {
                    b.HasOne("Repositories.Models.Account", "Account")
                        .WithMany("Products")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("product_accountid_foreign");

                    b.HasOne("Repositories.Models.ProductCategory", "Pcate")
                        .WithMany("Products")
                        .HasForeignKey("PcateId")
                        .IsRequired()
                        .HasConstraintName("product_pcateid_foreign");

                    b.Navigation("Account");

                    b.Navigation("Pcate");
                });

            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.Navigation("CustomerWallets");

                    b.Navigation("Customers");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Repositories.Models.CardProvider", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Repositories.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
